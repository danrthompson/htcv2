- address_id = address_type.chars.first
<div class="inner" data-hook=#{"#{address_type}_inner"}>
<p class="field" id=#{"#{address_id}firstname"}>
\#{form.label :firstname, Spree.t(:first_name)}
%span.required *
%br/
= form.text_field :firstname, :class => 'form-control input-small required'
<p class="field" id=#{"#{address_id}lastname"}>
\#{form.label :lastname, Spree.t(:last_name)}
%span.required *
%br/
= form.text_field :lastname, :class => 'form-control input-small required'
- if Spree::Config[:company]
  <p class="field" id=#{"#{address_id}company"}>
  \#{form.label :company, Spree.t(:company)}
  %br/
  = form.text_field :company, :class => 'form-control input-small'
<p class="field" id=#{"#{address_id}address1"}>
\#{form.label :address1, Spree.t(:street_address)}
%span.required *
%br/
= form.text_field :address1, :class => 'form-control input-small required'
<p class="field" id=#{"#{address_id}address2"}>
\#{form.label :address2, Spree.t(:street_address_2)}
%br/
= form.text_field :address2, :class => 'form-control input-small'
<p class="field" id=#{"#{address_id}city"}>
\#{form.label :city, Spree.t(:city)}
%span.required *
%br/
= form.text_field :city, :class => 'form-control input-small required'
<p class="field" id=#{"#{address_id}country"}>
\#{form.label :country_id, Spree.t(:country)}
%span.required *
%br/
<span id=#{"#{address_id}country-selection"}>
\#{form.collection_select :country_id, available_countries, :id, :name, {}, {:class => 'required form-control input small'}}

/ Implements state dropdown
- if Spree::Config[:address_requires_state]
  <p class="field" id=#{"#{address_id}state"}>
  - have_states = !address.country.states.empty?
  = form.label :state, Spree.t(:state)
  <span class='required' id=#{"#{address_id}state-required"}>*
  %br/
  - state_elements = [form.collection_select(:state_id, address.country.states, :id, :name, {:include_blank => true}, {:class => have_states ? 'required form-control input-small' : 'hidden', :disabled => !have_states}) + form.text_field(:state_name, :class => !have_states ? 'form-control input-small required' : 'hidden dont-show', :disabled => have_states)].join.gsub('"', "'").gsub("\n", "")
  - test = "<escape&&?>"
  %script{type: "text/javascript"}
    != "$('\##{address_id}state').append(\"#{state_elements}\");"
  %noscript
    = form.text_field :state_name, :class => 'form-control input-small required'


<p class="field" id=#{"#{address_id}zipcode"}>
\#{form.label :zipcode, Spree.t(:zip)}
%span.required *
%br/
= form.text_field :zipcode, :class => 'form-control input-small required'
<p class="field" id=#{"#{address_id}phone"}>
\#{form.label :phone, Spree.t(:phone)}
%span.required *
%br/
= form.phone_field :phone, :class => 'form-control input-small required'
- if Spree::Config[:alternative_shipping_phone]
  <p class="field" id=#{"#{address_id}altphone"}>
  \#{form.label :alternative_phone, Spree.t(:alternative_phone)}
  %br/
  = form.phone_field :alternative_phone
