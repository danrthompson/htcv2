/Users/atlantis/.rvm/rubies/ruby-1.9.3-p374/bin/ruby -S rspec ./spec/controllers/admin/comments_controller_spec.rb ./spec/controllers/admin/dashboard_controller_spec.rb ./spec/controllers/admin/health_controller_spec.rb ./spec/controllers/admin/pages_controller_spec.rb ./spec/controllers/admin/posts_controller_spec.rb ./spec/controllers/admin/sessions_controller_spec.rb ./spec/controllers/admin/sessions_routing_spec.rb ./spec/controllers/admin/undo_items_controller_spec.rb ./spec/controllers/archives_controller_spec.rb ./spec/controllers/archives_routing_spec.rb ./spec/controllers/comments_controller_spec.rb ./spec/controllers/pages_controller_spec.rb ./spec/controllers/pages_routing_spec.rb ./spec/controllers/posts_controller_spec.rb ./spec/controllers/posts_routing_spec.rb ./spec/helpers/page_title_helper_spec.rb ./spec/helpers/url_helper_spec.rb ./spec/lib/htcv2_formatter_spec.rb ./spec/lib/slugorize_spec.rb ./spec/models/comment_activity_spec.rb ./spec/models/comment_spec.rb ./spec/models/delete_comment_undo_spec.rb ./spec/models/delete_post_undo_spec.rb ./spec/models/page_spec.rb ./spec/models/post_spec.rb ./spec/models/stats_spec.rb ./spec/models/tag_spec.rb ./spec/models/tagging_spec.rb ./spec/views/admin/comments/index.html_spec.rb ./spec/views/admin/comments/show.html_spec.rb ./spec/views/admin/dashboard/show.html_spec.rb ./spec/views/admin/pages/index.html_spec.rb ./spec/views/admin/pages/new.html_spec.rb ./spec/views/admin/pages/show.html_spec.rb ./spec/views/admin/posts/index.html_spec.rb ./spec/views/admin/posts/new.html_spec.rb ./spec/views/admin/posts/show.html_spec.rb ./spec/views/admin/sessions/new.html_spec.rb ./spec/views/admin/undo_items/index.html_spec.rb ./spec/views/archives/index.html_spec.rb ./spec/views/layouts/admin.html_spec.rb ./spec/views/layouts/application.html_spec.rb ./spec/views/layouts/login.html_spec.rb ./spec/views/pages/show.html_spec.rb ./spec/views/posts/index.atom.builder_spec.rb ./spec/views/posts/index.html_spec.rb ./spec/views/posts/show.html_spec.rb
.......................F................................F..FFFFFFFFFFFFFFFFFFFFFFFFFFF....................FFFFFF..................................................................FFFFFF.F.FF........FFFFF........................................................................F.......

Failures:

  1) Admin::HealthController handling POST to generate_exception when not logged in does not raise
     Failure/Error: lambda {
       expected no Exception, got #<RuntimeError: RuntimeError> with backtrace:
         # ./app/controllers/admin/health_controller.rb:14:in `generate_exception'
         # ./spec/controllers/admin/health_controller_spec.rb:32:in `block (5 levels) in <top (required)>'
         # ./spec/controllers/admin/health_controller_spec.rb:31:in `block (4 levels) in <top (required)>'
     # ./spec/controllers/admin/health_controller_spec.rb:31:in `block (4 levels) in <top (required)>'

  2) Admin::SessionsController handling GET to show (default) redirects to new
     Failure/Error: get :show
     AbstractController::ActionNotFound:
       The action 'show' could not be found for Admin::SessionsController
     # ./spec/controllers/admin/sessions_controller_spec.rb:6:in `block (3 levels) in <top (required)>'

  3) Admin::SessionsController handling DELETE to destroy logs out the current session
     Failure/Error: delete :destroy
     AbstractController::ActionNotFound:
       The action 'destroy' could not be found for Admin::SessionsController
     # ./spec/controllers/admin/sessions_controller_spec.rb:28:in `block (3 levels) in <top (required)>'

  4) Admin::SessionsController handling DELETE to destroy redirects to /
     Failure/Error: delete :destroy
     AbstractController::ActionNotFound:
       The action 'destroy' could not be found for Admin::SessionsController
     # ./spec/controllers/admin/sessions_controller_spec.rb:28:in `block (3 levels) in <top (required)>'

  5) Admin::SessionsController#allow_login_bypass? when RAILS_ENV == production returns false
     Failure/Error: @controller.send(:allow_login_bypass?).should == false
     NoMethodError:
       undefined method `allow_login_bypass?' for #<Admin::SessionsController:0x007fbe54ab8bb8>
     # ./spec/controllers/admin/sessions_controller_spec.rb:44:in `block (3 levels) in <top (required)>'

  6) Admin::SessionsController handling CREATE with post with invalid URL http://evilman.com and OpenID authentication succeeding it should behave like not logged in should not set session[:logged_in]
     Failure/Error: post :create, :openid_url => "http://evilman.com"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:90
     # ./spec/controllers/admin/sessions_controller_spec.rb:88:in `block (3 levels) in <top (required)>'

  7) Admin::SessionsController handling CREATE with post with invalid URL http://evilman.com and OpenID authentication succeeding it should behave like not logged in should render new
     Failure/Error: post :create, :openid_url => "http://evilman.com"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:90
     # ./spec/controllers/admin/sessions_controller_spec.rb:88:in `block (3 levels) in <top (required)>'

  8) Admin::SessionsController handling CREATE with post with invalid URL http://evilman.com and OpenID authentication succeeding it should behave like not logged in should set flash.now[:error]
     Failure/Error: post :create, :openid_url => "http://evilman.com"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:90
     # ./spec/controllers/admin/sessions_controller_spec.rb:88:in `block (3 levels) in <top (required)>'

  9) Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication succeeding it should behave like logged in and redirected to /admin should set session[:logged_in]
     Failure/Error: post :create, :openid_url => "http://htcv2blog.com"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "logged in and redirected to /admin" called from ./spec/controllers/admin/sessions_controller_spec.rb:97
     # ./spec/controllers/admin/sessions_controller_spec.rb:95:in `block (3 levels) in <top (required)>'

  10) Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication succeeding it should behave like logged in and redirected to /admin should redirect to admin posts
     Failure/Error: post :create, :openid_url => "http://htcv2blog.com"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "logged in and redirected to /admin" called from ./spec/controllers/admin/sessions_controller_spec.rb:97
     # ./spec/controllers/admin/sessions_controller_spec.rb:95:in `block (3 levels) in <top (required)>'

  11) Admin::SessionsController handling CREATE with post with valid secondary URL http://secondaryopenid.com and OpenID authentication succeeding it should behave like logged in and redirected to /admin should set session[:logged_in]
     Failure/Error: post :create, :openid_url => "http://secondaryopenid.com"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "logged in and redirected to /admin" called from ./spec/controllers/admin/sessions_controller_spec.rb:104
     # ./spec/controllers/admin/sessions_controller_spec.rb:102:in `block (3 levels) in <top (required)>'

  12) Admin::SessionsController handling CREATE with post with valid secondary URL http://secondaryopenid.com and OpenID authentication succeeding it should behave like logged in and redirected to /admin should redirect to admin posts
     Failure/Error: post :create, :openid_url => "http://secondaryopenid.com"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "logged in and redirected to /admin" called from ./spec/controllers/admin/sessions_controller_spec.rb:104
     # ./spec/controllers/admin/sessions_controller_spec.rb:102:in `block (3 levels) in <top (required)>'

  13) Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'failed' it should behave like not logged in should not set session[:logged_in]
     Failure/Error: post :create, :openid_url => "http://htcv2blog.com"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:111
     # ./spec/controllers/admin/sessions_controller_spec.rb:109:in `block (3 levels) in <top (required)>'

  14) Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'failed' it should behave like not logged in should render new
     Failure/Error: post :create, :openid_url => "http://htcv2blog.com"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:111
     # ./spec/controllers/admin/sessions_controller_spec.rb:109:in `block (3 levels) in <top (required)>'

  15) Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'failed' it should behave like not logged in should set flash.now[:error]
     Failure/Error: post :create, :openid_url => "http://htcv2blog.com"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:111
     # ./spec/controllers/admin/sessions_controller_spec.rb:109:in `block (3 levels) in <top (required)>'

  16) Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'missing' it should behave like not logged in should not set session[:logged_in]
     Failure/Error: post :create, :openid_url => "http://htcv2blog.com"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:118
     # ./spec/controllers/admin/sessions_controller_spec.rb:116:in `block (3 levels) in <top (required)>'

  17) Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'missing' it should behave like not logged in should render new
     Failure/Error: post :create, :openid_url => "http://htcv2blog.com"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:118
     # ./spec/controllers/admin/sessions_controller_spec.rb:116:in `block (3 levels) in <top (required)>'

  18) Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'missing' it should behave like not logged in should set flash.now[:error]
     Failure/Error: post :create, :openid_url => "http://htcv2blog.com"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:118
     # ./spec/controllers/admin/sessions_controller_spec.rb:116:in `block (3 levels) in <top (required)>'

  19) Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'canceled' it should behave like not logged in should not set session[:logged_in]
     Failure/Error: post :create, :openid_url => "http://htcv2blog.com"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:125
     # ./spec/controllers/admin/sessions_controller_spec.rb:123:in `block (3 levels) in <top (required)>'

  20) Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'canceled' it should behave like not logged in should render new
     Failure/Error: post :create, :openid_url => "http://htcv2blog.com"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:125
     # ./spec/controllers/admin/sessions_controller_spec.rb:123:in `block (3 levels) in <top (required)>'

  21) Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'canceled' it should behave like not logged in should set flash.now[:error]
     Failure/Error: post :create, :openid_url => "http://htcv2blog.com"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:125
     # ./spec/controllers/admin/sessions_controller_spec.rb:123:in `block (3 levels) in <top (required)>'

  22) Admin::SessionsController handling CREATE with post with no URL it should behave like not logged in should not set session[:logged_in]
     Failure/Error: post :create, :openid_url => ""
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:131
     # ./spec/controllers/admin/sessions_controller_spec.rb:129:in `block (3 levels) in <top (required)>'

  23) Admin::SessionsController handling CREATE with post with no URL it should behave like not logged in should render new
     Failure/Error: post :create, :openid_url => ""
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:131
     # ./spec/controllers/admin/sessions_controller_spec.rb:129:in `block (3 levels) in <top (required)>'

  24) Admin::SessionsController handling CREATE with post with no URL it should behave like not logged in should set flash.now[:error]
     Failure/Error: post :create, :openid_url => ""
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:131
     # ./spec/controllers/admin/sessions_controller_spec.rb:129:in `block (3 levels) in <top (required)>'

  25) Admin::SessionsController handling CREATE with post with bypass login selected it should behave like logged in and redirected to /admin should set session[:logged_in]
     Failure/Error: post :create, :openid_url => "", :bypass_login => "1"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "logged in and redirected to /admin" called from ./spec/controllers/admin/sessions_controller_spec.rb:137
     # ./spec/controllers/admin/sessions_controller_spec.rb:135:in `block (3 levels) in <top (required)>'

  26) Admin::SessionsController handling CREATE with post with bypass login selected it should behave like logged in and redirected to /admin should redirect to admin posts
     Failure/Error: post :create, :openid_url => "", :bypass_login => "1"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "logged in and redirected to /admin" called from ./spec/controllers/admin/sessions_controller_spec.rb:137
     # ./spec/controllers/admin/sessions_controller_spec.rb:135:in `block (3 levels) in <top (required)>'

  27) Admin::SessionsController handling CREATE with post with bypass login selected but login bypassing disabled it should behave like not logged in should not set session[:logged_in]
     Failure/Error: post :create, :openid_url => "", :bypass_login => "1"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:144
     # ./spec/controllers/admin/sessions_controller_spec.rb:142:in `block (3 levels) in <top (required)>'

  28) Admin::SessionsController handling CREATE with post with bypass login selected but login bypassing disabled it should behave like not logged in should render new
     Failure/Error: post :create, :openid_url => "", :bypass_login => "1"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:144
     # ./spec/controllers/admin/sessions_controller_spec.rb:142:in `block (3 levels) in <top (required)>'

  29) Admin::SessionsController handling CREATE with post with bypass login selected but login bypassing disabled it should behave like not logged in should set flash.now[:error]
     Failure/Error: post :create, :openid_url => "", :bypass_login => "1"
     AbstractController::ActionNotFound:
       The action 'create' could not be found for Admin::SessionsController
     Shared Example Group: "not logged in" called from ./spec/controllers/admin/sessions_controller_spec.rb:144
     # ./spec/controllers/admin/sessions_controller_spec.rb:142:in `block (3 levels) in <top (required)>'

  30) CommentsController handling commenting with a POST to #index (non-OpenID comment) allows setting of author
     Failure/Error: post :create, :year => '2007', :month => '01', :day => '01', :slug => 'a-post', :comment => {
     NoMethodError:
       undefined method `blank_openid_fields' for #<Comment:0x007fbe5ab69408>
     # ./app/controllers/comments_controller.rb:55:in `create'
     # ./spec/controllers/comments_controller_spec.rb:68:in `block (3 levels) in <top (required)>'

  31) CommentsController handling commenting with a POST to #index (non-OpenID comment) allows setting of body
     Failure/Error: post :create, :year => '2007', :month => '01', :day => '01', :slug => 'a-post', :comment => {
     NoMethodError:
       undefined method `blank_openid_fields' for #<Comment:0x007fbe5927be78>
     # ./app/controllers/comments_controller.rb:55:in `create'
     # ./spec/controllers/comments_controller_spec.rb:68:in `block (3 levels) in <top (required)>'

  32) CommentsController handling commenting with a POST to #index (non-OpenID comment) forbids setting of author_url
     Failure/Error: post :create, :year => '2007', :month => '01', :day => '01', :slug => 'a-post', :comment => {
     NoMethodError:
       undefined method `blank_openid_fields' for #<Comment:0x007fbe5a18b620>
     # ./app/controllers/comments_controller.rb:55:in `create'
     # ./spec/controllers/comments_controller_spec.rb:68:in `block (3 levels) in <top (required)>'

  33) CommentsController handling commenting with a POST to #index (non-OpenID comment) forbids setting of author_email
     Failure/Error: post :create, :year => '2007', :month => '01', :day => '01', :slug => 'a-post', :comment => {
     NoMethodError:
       undefined method `blank_openid_fields' for #<Comment:0x007fbe5a9742b0>
     # ./app/controllers/comments_controller.rb:55:in `create'
     # ./spec/controllers/comments_controller_spec.rb:68:in `block (3 levels) in <top (required)>'

  34) CommentsController handling commenting with a POST to #index (non-OpenID comment) forbids setting of created_at
     Failure/Error: post :create, :year => '2007', :month => '01', :day => '01', :slug => 'a-post', :comment => {
     NoMethodError:
       undefined method `blank_openid_fields' for #<Comment:0x007fbe5966ad68>
     # ./app/controllers/comments_controller.rb:55:in `create'
     # ./spec/controllers/comments_controller_spec.rb:68:in `block (3 levels) in <top (required)>'

  35) CommentsController handling commenting with a POST to #index (non-OpenID comment) forbids setting of updated_at
     Failure/Error: post :create, :year => '2007', :month => '01', :day => '01', :slug => 'a-post', :comment => {
     NoMethodError:
       undefined method `blank_openid_fields' for #<Comment:0x007fbe578a1368>
     # ./app/controllers/comments_controller.rb:55:in `create'
     # ./spec/controllers/comments_controller_spec.rb:68:in `block (3 levels) in <top (required)>'

  36) Comment requires OpenID authentication when the author's name looks like a url
     Failure/Error: @comment.requires_openid_authentication?.should == false
     NoMethodError:
       undefined method `requires_openid_authentication?' for #<Comment:0x007fbe5a405798>
     # ./spec/models/comment_spec.rb:47:in `block (2 levels) in <top (required)>'

  37) Comment doesn't require auth just because the author's name contains a dot
     Failure/Error: @comment.requires_openid_authentication?.should == false
     NoMethodError:
       undefined method `requires_openid_authentication?' for #<Comment:0x007fbe5a409910>
     # ./spec/models/comment_spec.rb:54:in `block (2 levels) in <top (required)>'

  38) Comment requires OpenID authentication when the author's name starts with http
     Failure/Error: @comment.requires_openid_authentication?.should == true
     NoMethodError:
       undefined method `requires_openid_authentication?' for #<Comment:0x007fbe5a40e258>
     # ./spec/models/comment_spec.rb:59:in `block (2 levels) in <top (required)>'

  39) Comment asks post to update it's comment counter after save
     Failure/Error: @comment.blank_openid_fields
     NoMethodError:
       undefined method `blank_openid_fields' for #<Comment:0x007fbe5a9f4a50>
     # ./spec/models/comment_spec.rb:66:in `block (2 levels) in <top (required)>'

  40) Comment asks post to update it's comment counter after destroy
     Failure/Error: @comment.blank_openid_fields
     NoMethodError:
       undefined method `blank_openid_fields' for #<Comment:0x007fbe5a9f8600>
     # ./spec/models/comment_spec.rb:75:in `block (2 levels) in <top (required)>'

  41) Comment applies a Lesstile filter to body and store it in body_html before save
     Failure/Error: @comment.blank_openid_fields
     NoMethodError:
       undefined method `blank_openid_fields' for #<Comment:0x007fbe5a9fbb20>
     # ./spec/models/comment_spec.rb:85:in `block (2 levels) in <top (required)>'

  42) Comment responds to user_logged_in? for defensio integration
     Failure/Error: @comment.respond_to?(:user_logged_in?).should == true
       expected: true
            got: false (using ==)
     # ./spec/models/comment_spec.rb:97:in `block (2 levels) in <top (required)>'

  43) Comment#blank_openid_fields_if_unused blanks out author_url
     Failure/Error: @comment.blank_openid_fields
     NoMethodError:
       undefined method `blank_openid_fields' for #<Comment:0x007fbe5ab93618>
     # ./spec/models/comment_spec.rb:113:in `block (2 levels) in <top (required)>'

  44) Comment#blank_openid_fields_if_unused blanks out author_email
     Failure/Error: @comment.blank_openid_fields
     NoMethodError:
       undefined method `blank_openid_fields' for #<Comment:0x007fbe5ab97ee8>
     # ./spec/models/comment_spec.rb:113:in `block (2 levels) in <top (required)>'

  45) Comment.build_for_preview with OpenID author sets author_url to OpenID identity
     Failure/Error: @comment.author_url.should == 'http://htcv2blog.com'
       expected: "http://htcv2blog.com"
            got: nil (using ==)
     # ./spec/models/comment_spec.rb:173:in `block (2 levels) in <top (required)>'

  46) Comment.build_for_preview with OpenID author sets author to "Your OpenID Name"
     Failure/Error: @comment.author.should == "Your OpenID Name"
       expected: "Your OpenID Name"
            got: "http://htcv2blog.com" (using ==)
     # ./spec/models/comment_spec.rb:177:in `block (2 levels) in <top (required)>'

  47) Comment#requires_openid_authentication? with an author that looks like a url 
     Failure/Error: subject { Comment.new(:author => 'example.com').requires_openid_authentication? }
     NoMethodError:
       undefined method `requires_openid_authentication?' for #<Comment:0x007fbe5900ea00>
     # ./spec/models/comment_spec.rb:183:in `block (3 levels) in <top (required)>'
     # ./spec/models/comment_spec.rb:185:in `block (3 levels) in <top (required)>'

  48) Comment#requires_openid_authentication? with a normal author 
     Failure/Error: subject { Comment.new(:author => 'Don Alias').requires_openid_authentication? }
     NoMethodError:
       undefined method `requires_openid_authentication?' for #<Comment:0x007fbe591df9d8>
     # ./spec/models/comment_spec.rb:189:in `block (3 levels) in <top (required)>'
     # ./spec/models/comment_spec.rb:191:in `block (3 levels) in <top (required)>'

  49) Comment#requires_openid_authentication? with a nil author 
     Failure/Error: subject { Comment.new.requires_openid_authentication? }
     NoMethodError:
       undefined method `requires_openid_authentication?' for #<Comment:0x007fbe59134678>
     # ./spec/models/comment_spec.rb:195:in `block (3 levels) in <top (required)>'
     # ./spec/models/comment_spec.rb:197:in `block (3 levels) in <top (required)>'

  50) /layouts/application.html renders
     Failure/Error: render :template => '/layouts/application', :formats => [:html]
     ActionView::Template::Error:
       undefined method `open_id_delegation_link_tags' for #<#<Class:0x007fbe5ac413a8>:0x007fbe58950e98>
     # ./app/views/layouts/application.html.erb:9:in `_app_views_layouts_application_html_erb___1923690873499804404_70227772147080'
     # ./spec/views/layouts/application.html_spec.rb:21:in `block (2 levels) in <top (required)>'

Finished in 2.98 seconds
282 examples, 50 failures

Failed examples:

rspec ./spec/controllers/admin/health_controller_spec.rb:30 # Admin::HealthController handling POST to generate_exception when not logged in does not raise
rspec ./spec/controllers/admin/sessions_controller_spec.rb:5 # Admin::SessionsController handling GET to show (default) redirects to new
rspec ./spec/controllers/admin/sessions_controller_spec.rb:31 # Admin::SessionsController handling DELETE to destroy logs out the current session
rspec ./spec/controllers/admin/sessions_controller_spec.rb:35 # Admin::SessionsController handling DELETE to destroy redirects to /
rspec ./spec/controllers/admin/sessions_controller_spec.rb:42 # Admin::SessionsController#allow_login_bypass? when RAILS_ENV == production returns false
rspec ./spec/controllers/admin/sessions_controller_spec.rb:59 # Admin::SessionsController handling CREATE with post with invalid URL http://evilman.com and OpenID authentication succeeding it should behave like not logged in should not set session[:logged_in]
rspec ./spec/controllers/admin/sessions_controller_spec.rb:62 # Admin::SessionsController handling CREATE with post with invalid URL http://evilman.com and OpenID authentication succeeding it should behave like not logged in should render new
rspec ./spec/controllers/admin/sessions_controller_spec.rb:66 # Admin::SessionsController handling CREATE with post with invalid URL http://evilman.com and OpenID authentication succeeding it should behave like not logged in should set flash.now[:error]
rspec ./spec/controllers/admin/sessions_controller_spec.rb:50 # Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication succeeding it should behave like logged in and redirected to /admin should set session[:logged_in]
rspec ./spec/controllers/admin/sessions_controller_spec.rb:53 # Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication succeeding it should behave like logged in and redirected to /admin should redirect to admin posts
rspec ./spec/controllers/admin/sessions_controller_spec.rb:50 # Admin::SessionsController handling CREATE with post with valid secondary URL http://secondaryopenid.com and OpenID authentication succeeding it should behave like logged in and redirected to /admin should set session[:logged_in]
rspec ./spec/controllers/admin/sessions_controller_spec.rb:53 # Admin::SessionsController handling CREATE with post with valid secondary URL http://secondaryopenid.com and OpenID authentication succeeding it should behave like logged in and redirected to /admin should redirect to admin posts
rspec ./spec/controllers/admin/sessions_controller_spec.rb:59 # Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'failed' it should behave like not logged in should not set session[:logged_in]
rspec ./spec/controllers/admin/sessions_controller_spec.rb:62 # Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'failed' it should behave like not logged in should render new
rspec ./spec/controllers/admin/sessions_controller_spec.rb:66 # Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'failed' it should behave like not logged in should set flash.now[:error]
rspec ./spec/controllers/admin/sessions_controller_spec.rb:59 # Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'missing' it should behave like not logged in should not set session[:logged_in]
rspec ./spec/controllers/admin/sessions_controller_spec.rb:62 # Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'missing' it should behave like not logged in should render new
rspec ./spec/controllers/admin/sessions_controller_spec.rb:66 # Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'missing' it should behave like not logged in should set flash.now[:error]
rspec ./spec/controllers/admin/sessions_controller_spec.rb:59 # Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'canceled' it should behave like not logged in should not set session[:logged_in]
rspec ./spec/controllers/admin/sessions_controller_spec.rb:62 # Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'canceled' it should behave like not logged in should render new
rspec ./spec/controllers/admin/sessions_controller_spec.rb:66 # Admin::SessionsController handling CREATE with post with valid URL http://htcv2blog.com and OpenID authentication returning 'canceled' it should behave like not logged in should set flash.now[:error]
rspec ./spec/controllers/admin/sessions_controller_spec.rb:59 # Admin::SessionsController handling CREATE with post with no URL it should behave like not logged in should not set session[:logged_in]
rspec ./spec/controllers/admin/sessions_controller_spec.rb:62 # Admin::SessionsController handling CREATE with post with no URL it should behave like not logged in should render new
rspec ./spec/controllers/admin/sessions_controller_spec.rb:66 # Admin::SessionsController handling CREATE with post with no URL it should behave like not logged in should set flash.now[:error]
rspec ./spec/controllers/admin/sessions_controller_spec.rb:50 # Admin::SessionsController handling CREATE with post with bypass login selected it should behave like logged in and redirected to /admin should set session[:logged_in]
rspec ./spec/controllers/admin/sessions_controller_spec.rb:53 # Admin::SessionsController handling CREATE with post with bypass login selected it should behave like logged in and redirected to /admin should redirect to admin posts
rspec ./spec/controllers/admin/sessions_controller_spec.rb:59 # Admin::SessionsController handling CREATE with post with bypass login selected but login bypassing disabled it should behave like not logged in should not set session[:logged_in]
rspec ./spec/controllers/admin/sessions_controller_spec.rb:62 # Admin::SessionsController handling CREATE with post with bypass login selected but login bypassing disabled it should behave like not logged in should render new
rspec ./spec/controllers/admin/sessions_controller_spec.rb:66 # Admin::SessionsController handling CREATE with post with bypass login selected but login bypassing disabled it should behave like not logged in should set flash.now[:error]
rspec ./spec/controllers/comments_controller_spec.rb:81 # CommentsController handling commenting with a POST to #index (non-OpenID comment) allows setting of author
rspec ./spec/controllers/comments_controller_spec.rb:85 # CommentsController handling commenting with a POST to #index (non-OpenID comment) allows setting of body
rspec ./spec/controllers/comments_controller_spec.rb:89 # CommentsController handling commenting with a POST to #index (non-OpenID comment) forbids setting of author_url
rspec ./spec/controllers/comments_controller_spec.rb:93 # CommentsController handling commenting with a POST to #index (non-OpenID comment) forbids setting of author_email
rspec ./spec/controllers/comments_controller_spec.rb:97 # CommentsController handling commenting with a POST to #index (non-OpenID comment) forbids setting of created_at
rspec ./spec/controllers/comments_controller_spec.rb:101 # CommentsController handling commenting with a POST to #index (non-OpenID comment) forbids setting of updated_at
rspec ./spec/models/comment_spec.rb:45 # Comment requires OpenID authentication when the author's name looks like a url
rspec ./spec/models/comment_spec.rb:52 # Comment doesn't require auth just because the author's name contains a dot
rspec ./spec/models/comment_spec.rb:57 # Comment requires OpenID authentication when the author's name starts with http
rspec ./spec/models/comment_spec.rb:64 # Comment asks post to update it's comment counter after save
rspec ./spec/models/comment_spec.rb:73 # Comment asks post to update it's comment counter after destroy
rspec ./spec/models/comment_spec.rb:83 # Comment applies a Lesstile filter to body and store it in body_html before save
rspec ./spec/models/comment_spec.rb:96 # Comment responds to user_logged_in? for defensio integration
rspec ./spec/models/comment_spec.rb:116 # Comment#blank_openid_fields_if_unused blanks out author_url
rspec ./spec/models/comment_spec.rb:117 # Comment#blank_openid_fields_if_unused blanks out author_email
rspec ./spec/models/comment_spec.rb:172 # Comment.build_for_preview with OpenID author sets author_url to OpenID identity
rspec ./spec/models/comment_spec.rb:176 # Comment.build_for_preview with OpenID author sets author to "Your OpenID Name"
rspec ./spec/models/comment_spec.rb:185 # Comment#requires_openid_authentication? with an author that looks like a url 
rspec ./spec/models/comment_spec.rb:191 # Comment#requires_openid_authentication? with a normal author 
rspec ./spec/models/comment_spec.rb:197 # Comment#requires_openid_authentication? with a nil author 
rspec ./spec/views/layouts/application.html_spec.rb:20 # /layouts/application.html renders
